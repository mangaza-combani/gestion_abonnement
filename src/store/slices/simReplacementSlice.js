import { apiSliceWithPrefix } from '../api/apiSlice';

// RTK Query API endpoints pour les remplacements SIM
export const simReplacementApiSlice = apiSliceWithPrefix.injectEndpoints({
  endpoints: (builder) => ({
    // Traiter une demande de remplacement SIM (vol/perte)
    processSimReplacementRequest: builder.mutation({
      query: (payload) => ({
        url: '/sim-replacement/process',
        method: 'POST',
        body: payload
      }),
      invalidatesTags: [
        'Phone',
        { type: 'Phone', id: 'LIST' },
        'PhoneToBlock', // Invalider onglet √Ä BLOQUER
        'ClientToOrder'
      ]
    }),

    // Confirmations superviseur (blocage RED + commande SIM)
    confirmSimReplacementActions: builder.mutation({
      query: (payload) => ({
        url: '/sim-replacement/confirm-actions',
        method: 'POST',
        body: payload
      }),
      invalidatesTags: [
        'Phone',
        { type: 'Phone', id: 'LIST' },
        'PhoneToBlock', // Retirer de √Ä BLOQUER
        'PhoneToActivate', // Ajouter dans √Ä ACTIVER
        'ClientToOrder', // Ou dans √Ä COMMANDER selon le cas
        'PhonesList', // Mettre √† jour liste g√©n√©rale
        'Reservation', // Mettre √† jour r√©servations
        'LineReservation' // Forcer rafra√Æchissement onglet √Ä ACTIVER
      ]
    }),

    // D√©clarer la r√©ception d'une SIM de remplacement
    declareSimReplacementReceived: builder.mutation({
      query: (payload) => ({
        url: '/sim-replacement/declare-received',
        method: 'POST',
        body: payload
      }),
      invalidatesTags: [
        'Phone',
        { type: 'Phone', id: 'LIST' },
        'PhoneToActivate', // Mettre √† jour statut dans √Ä ACTIVER
        'PhonesList', // Mettre √† jour liste g√©n√©rale
        'Reservation', // Mettre √† jour r√©servations
        'LineReservation' // Forcer rafra√Æchissement onglet √Ä ACTIVER
      ]
    }),

    // üÜï Commander une SIM de remplacement pour ligne en pause
    orderReplacementSim: builder.mutation({
      query: (payload) => ({
        url: '/sim-replacement/order-replacement',
        method: 'POST',
        body: payload
      }),
      invalidatesTags: [
        'Phone',
        { type: 'Phone', id: 'LIST' },
        'ClientToOrder', // Ligne va appara√Ætre dans √Ä COMMANDER
        'PhonesList', // Mettre √† jour liste des lignes
        'Reservation', // Mettre √† jour r√©servations
        'LineReservation', // Forcer rafra√Æchissement onglet √Ä ACTIVER
        'PhoneToActivate' // Au cas o√π elle va dans √Ä ACTIVER
      ]
    })
  })
});

// Export des hooks g√©n√©r√©s automatiquement
export const {
  useProcessSimReplacementRequestMutation,
  useConfirmSimReplacementActionsMutation,
  useDeclareSimReplacementReceivedMutation,
  useOrderReplacementSimMutation // üÜï NOUVEAU HOOK
} = simReplacementApiSlice;